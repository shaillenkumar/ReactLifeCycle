{"ast":null,"code":"var _jsxFileName = \"/Users/shailendra/Documents/Development/books-day2/src/BookForm.js\";\nimport React, { Component } from 'react';\nexport default class BookForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      author: '',\n      genre: '',\n      image: '',\n      formErrors: {\n        title: 'Name is required',\n        author: 'Author is required',\n        genre: 'Genre is required',\n        image: 'Image is required'\n      }\n    };\n\n    this.addBook = event => {\n      event.preventDefault();\n      let {\n        formErrors\n      } = this.state;\n\n      if (this.validateForm(formErrors)) {\n        alert('All is well!');\n      }\n\n      let errorMessages = Object.values(formErrors).map((err, index) => err.length === 0 ? null : /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 101\n        }\n      }, err));\n      this.setState({\n        errorMessages\n      });\n    };\n\n    this.validateForm = formErrors => {\n      let valid = true;\n      Object.values(formErrors).forEach(err => valid = valid && err.length === 0);\n      return valid;\n    };\n\n    this.formHandler = event => {\n      /*\n      //Step-1\n      let name = event.target.name;\n      let value = event.target.value;\n      let modifiedState = {};\n      modifiedState[name] = value;\n      //console.log(modifiedState);\n      this.setState(modifiedState);\n      console.log(this.state);\n      */\n      //this.setState({[event.target.name]: event.target.value, formErrors});\n      //validation Step-2\n      let {\n        name,\n        value\n      } = event.target;\n      let {\n        formErrors\n      } = this.state;\n\n      switch (name) {\n        case 'title':\n          if (!value || value.length === 0) {\n            formErrors.title = 'Name is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.title = 'Name must be between 3 to 20 letters';\n          } else {\n            formErrors.title = '';\n          }\n\n          break;\n\n        case 'author':\n          if (!value || value.length === 0) {\n            formErrors.author = 'Author is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.author = 'Author must be between 3 and 20 letters';\n          } else {\n            formErrors.author = '';\n          }\n\n          break;\n\n        case 'genre':\n          if (!value || value.length === 0) {\n            formErrors.genre = 'Genre is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.genre = 'Genre must be between 3 and 20 letters';\n          } else {\n            formErrors.genre = '';\n          }\n\n          break;\n\n        case 'image':\n          if (!value || value.length === 0) {\n            formErrors.image = 'Image is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.image = 'Image must be between 3 and 20 letters';\n          } else {\n            formErrors.image = '';\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [name]: value,\n        formErrors\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.addBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.title,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \"Author:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.author,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"author\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Genre:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.genre,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"genre\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, \"Image:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.image,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"image\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Save data\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, this.state.errorMessages)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \"Current State\"), /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state, null, 3))));\n  }\n\n}","map":{"version":3,"sources":["/Users/shailendra/Documents/Development/books-day2/src/BookForm.js"],"names":["React","Component","BookForm","state","title","author","genre","image","formErrors","addBook","event","preventDefault","validateForm","alert","errorMessages","Object","values","map","err","index","length","setState","valid","forEach","formHandler","name","value","target","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class BookForm extends Component {\n    state = {\n        title:'',\n        author:'',\n        genre:'',\n        image:'',\n\n\n        formErrors: {\n            title: 'Name is required',\n            author: 'Author is required',\n            genre: 'Genre is required',\n            image: 'Image is required'\n        }\n    }\n//-------------------------------------------------\n    //ON SUBMIT Validation Step-3\n    addBook = (event) => {\n        event.preventDefault(); \n\n        let { formErrors } = this.state;\n\n        if (this.validateForm(formErrors)) {\n            alert('All is well!');\n        }\n\n        let errorMessages = Object.values(formErrors).map((err, index) => err.length === 0 ? null : <li key={index}>{err}</li>)\n        this.setState({ errorMessages });\n\n    }\n\n    validateForm = (formErrors) => {\n        let valid = true;\n        Object.values(formErrors).forEach(err => valid = valid && err.length === 0)\n        return valid;\n    }\n//-------------------------------------------------\n    formHandler = (event) => {\n        /*\n        //Step-1\n        let name = event.target.name;\n        let value = event.target.value;\n        let modifiedState = {};\n        modifiedState[name] = value;\n        //console.log(modifiedState);\n        this.setState(modifiedState);\n        console.log(this.state);\n        */\n       //this.setState({[event.target.name]: event.target.value, formErrors});\n\n        //validation Step-2\n        let { name, value } = event.target;\n        let { formErrors } = this.state;\n\n        switch(name) {\n            case 'title':\n                if (!value || value.length === 0) {\n                    formErrors.title = 'Name is required';\n                }\n                else if (value.length < 3 || value.length > 20) {\n                    formErrors.title = 'Name must be between 3 to 20 letters';\n                }\n                else {\n                    formErrors.title = '';\n                }\n                break;\n           \n            case 'author':\n                if(!value || value.length === 0){\n                    formErrors.author = 'Author is required';\n                }\n                else if(value.length < 3 || value.length >20 ){\n                    formErrors.author = 'Author must be between 3 and 20 letters';\n                }else{\n                    formErrors.author = '';\n\n                }\n                break;\n            case 'genre':\n                if(!value || value.length === 0){\n                    formErrors.genre = 'Genre is required';\n                }\n                else if(value.length < 3 || value.length >20 ){\n                    formErrors.genre = 'Genre must be between 3 and 20 letters';\n                }else{\n                    formErrors.genre = '';\n                }\n                break;\n            case 'image':\n                if(!value || value.length === 0){\n                    formErrors.image = 'Image is required';\n                }\n                else if(value.length < 3 || value.length >20 ){\n                    formErrors.image = 'Image must be between 3 and 20 letters';\n                }else{\n                    formErrors.image = '';\n\n                }\n                break;\n            default:\n                break;\n        }\n        this.setState({ [name]: value, formErrors });\n        \n    }\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    {/*<p>{JSON.stringify(this.state)}</p>*/}\n                    <form className=\"form\" onSubmit={this.addBook}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Name:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.title} onChange={this.formHandler} type=\"text\" name=\"title\" className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Author:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.author} onChange={this.formHandler} type=\"text\" name=\"author\" className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Genre:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.genre} onChange={this.formHandler} type=\"text\" name=\"genre\" className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Image:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.image} onChange={this.formHandler} type=\"text\" name=\"image\" className=\"form-control\"/>\n                            </div>\n                        </div>\n\n\n                        {/* Step-3 */}\n                        <button className=\"btn btn-primary\">Save data</button>\n                    </form> \n\n                        {/* Step-4 */}\n                    <ul>\n                            {this.state.errorMessages}\n                    </ul>\n            </div>\n            <div className=\"col\">\n                <h3>Current State</h3>\n                <pre>{JSON.stringify(this.state,null,3)}</pre>\n\n            </div>\n        </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}