{"ast":null,"code":"var _jsxFileName = \"/Users/shailendra/Documents/Development/books-day2/src/BookForm.js\";\nimport React, { Component } from 'react';\nexport default class BookForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      author: '',\n      genre: '',\n      image: '',\n      formErrors: {\n        name: 'Name is required',\n        author: 'Author is required',\n        genre: 'Genre is required',\n        image: 'Image is required'\n      }\n    };\n\n    this.formHandler = event => {\n      /*\n      let name = event.target.name;\n      let value = event.target.value;\n      let modifiedState = {};\n      modifiedState[name] = value;\n      //console.log(modifiedState);\n      this.setState(modifiedState);\n      console.log(this.state);\n      */\n      //this.setState({[event.target.name]: event.target.value, formErrors});\n      //validation\n      let {\n        name,\n        value\n      } = event.target;\n      let {\n        formErrors\n      } = this.state;\n\n      switch (name) {\n        case 'name':\n          if (!value || value.length === 0) {\n            formErrors.name = 'Name is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.name = 'Name must be between 3 to 20 letters';\n          } else {\n            formErrors.name = '';\n          }\n\n          break;\n\n        case 'author':\n          if (!value || value.length === 0) {\n            formErrors.author = 'Author is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.author = 'Author must be between 3 and 20 letters';\n          } else {\n            formErrors.author = '';\n          }\n\n          break;\n\n        case 'genre':\n          if (!value || value.length === 0) {\n            formErrors.genre = 'Genre is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.genre = 'Genre must be between 3 and 20 letters';\n          } else {\n            formErrors.genre = '';\n          }\n\n          break;\n\n        case 'image':\n          if (!value || value.length === 0) {\n            formErrors.image = 'Image is required';\n          } else if (value.length < 3 || value.length > 20) {\n            formErrors.image = 'Image must be between 3 and 20 letters';\n          } else {\n            formErrors.image = '';\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [name]: value,\n        formErrors\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.addBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.name,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"name\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"Author:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.author,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"author\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"Genre:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.genre,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"genre\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      className: \"control-label col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"Image:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.image,\n      onChange: this.formHandler,\n      type: \"text\",\n      name: \"image\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Current State\"), /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state, null, 3))));\n  }\n\n}","map":{"version":3,"sources":["/Users/shailendra/Documents/Development/books-day2/src/BookForm.js"],"names":["React","Component","BookForm","state","name","author","genre","image","formErrors","formHandler","event","value","target","length","setState","render","addBook","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class BookForm extends Component {\n    state = {\n        name:'',\n        author:'',\n        genre:'',\n        image:'',\n\n\n        formErrors: {\n            name: 'Name is required',\n            author: 'Author is required',\n            genre: 'Genre is required',\n            image: 'Image is required'\n        }\n    }\n\n    formHandler = (event) => {\n        /*\n        let name = event.target.name;\n        let value = event.target.value;\n        let modifiedState = {};\n        modifiedState[name] = value;\n        //console.log(modifiedState);\n        this.setState(modifiedState);\n        console.log(this.state);\n        */\n       //this.setState({[event.target.name]: event.target.value, formErrors});\n\n        //validation\n        let { name, value } = event.target;\n        let { formErrors } = this.state;\n\n        switch(name) {\n            case 'name':\n                if (!value || value.length === 0) {\n                    formErrors.name = 'Name is required';\n                }\n                else if (value.length < 3 || value.length > 20) {\n                    formErrors.name = 'Name must be between 3 to 20 letters';\n                }\n                else {\n                    formErrors.name = '';\n                }\n                break;\n           \n            case 'author':\n                if(!value || value.length === 0){\n                    formErrors.author = 'Author is required';\n                }\n                else if(value.length < 3 || value.length >20 ){\n                    formErrors.author = 'Author must be between 3 and 20 letters';\n                }else{\n                    formErrors.author = '';\n\n                }\n                break;\n            case 'genre':\n                if(!value || value.length === 0){\n                    formErrors.genre = 'Genre is required';\n                }\n                else if(value.length < 3 || value.length >20 ){\n                    formErrors.genre = 'Genre must be between 3 and 20 letters';\n                }else{\n                    formErrors.genre = '';\n                }\n                break;\n            case 'image':\n                if(!value || value.length === 0){\n                    formErrors.image = 'Image is required';\n                }\n                else if(value.length < 3 || value.length >20 ){\n                    formErrors.image = 'Image must be between 3 and 20 letters';\n                }else{\n                    formErrors.image = '';\n\n                }\n                break;\n            default:\n                break;\n        }\n        this.setState({ [name]: value, formErrors });\n        \n    }\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    {/*<p>{JSON.stringify(this.state)}</p>*/}\n                    <form className=\"form\" onSubmit={this.addBook}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Name:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.name} onChange={this.formHandler} type=\"text\" name=\"name\" className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Author:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.author} onChange={this.formHandler} type=\"text\" name=\"author\" className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Genre:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.genre} onChange={this.formHandler} type=\"text\" name=\"genre\" className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"control-label col-md-4\">\n                                Image:\n                            </label>\n                            <div className=\"col-md-8\">\n                                <input value={this.state.image} onChange={this.formHandler} type=\"text\" name=\"image\" className=\"form-control\"/>\n                            </div>\n                        </div>\n                    </form> \n            </div>\n            <div className=\"col\">\n                <h3>Current State</h3>\n                <pre>{JSON.stringify(this.state,null,3)}</pre>\n\n            </div>\n        </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}